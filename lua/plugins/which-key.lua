return { -- Useful plugin to show you pending keybinds.
  'folke/which-key.nvim',
  event = 'VimEnter', -- Sets the loading event to 'VimEnter'
  config = function() -- This is the function that runs, AFTER loading
    require('which-key').setup()

    -- Document existing key chains
    local which_key = require 'which-key'
    which_key.add {
      { '<leader>c', group = '[C]ode' },
      { '<leader>c_', hidden = true },
      { '<leader>d', group = '[D]ocument' },
      { '<leader>d_', hidden = true },
      { '<leader>r', group = '[R]ename' },
      { '<leader>r_', hidden = true },
      { '<leader>s', group = '[S]earch' },
      { '<leader>s_', hidden = true },
      { '<leader>w', group = '[W]orkspace' },
      { '<leader>w_', hidden = true },
      { '<leader>d', group = '[D]iff' },
      { '<leader>dv', group = '[V]iew' },
      { '<leader>dvc', '<cmd>DiffviewClose<cr>', desc = '[C]lose' },
      { '<leader>dvo', '<cmd>DiffviewOpen<cr>', desc = '[O]pen' },
      { '<leader>g', group = 'Git' },
      { '<leader>gh', group = 'Github' },
      { '<leader>ghc', group = 'Commits' },
      { '<leader>ghcc', '<cmd>GHCloseCommit<cr>', desc = 'Close' },
      { '<leader>ghce', '<cmd>GHExpandCommit<cr>', desc = 'Expand' },
      { '<leader>ghco', '<cmd>GHOpenToCommit<cr>', desc = 'Open To' },
      { '<leader>ghcp', '<cmd>GHPopOutCommit<cr>', desc = 'Pop Out' },
      { '<leader>ghcz', '<cmd>GHCollapseCommit<cr>', desc = 'Collapse' },
      { '<leader>ghi', group = 'Issues' },
      { '<leader>ghip', '<cmd>GHPreviewIssue<cr>', desc = 'Preview' },
      { '<leader>ghp', group = 'Pull Request' },
      { '<leader>ghpc', '<cmd>GHClosePR<cr>', desc = 'Close' },
      { '<leader>ghpd', '<cmd>GHPRDetails<cr>', desc = 'Details' },
      { '<leader>ghpe', '<cmd>GHExpandPR<cr>', desc = 'Expand' },
      { '<leader>ghpo', '<cmd>GHOpenPR<cr>', desc = 'Open' },
      { '<leader>ghpp', '<cmd>GHPopOutPR<cr>', desc = 'PopOut' },
      { '<leader>ghpr', '<cmd>GHRefreshPR<cr>', desc = 'Refresh' },
      { '<leader>ghpt', '<cmd>GHOpenToPR<cr>', desc = 'Open To' },
      { '<leader>ghpz', '<cmd>GHCollapsePR<cr>', desc = 'Collapse' },
      { '<leader>ghr', group = 'Review' },
      { '<leader>ghrb', '<cmd>GHStartReview<cr>', desc = 'Begin' },
      { '<leader>ghrc', '<cmd>GHCloseReview<cr>', desc = 'Close' },
      { '<leader>ghrd', '<cmd>GHDeleteReview<cr>', desc = 'Delete' },
      { '<leader>ghre', '<cmd>GHExpandReview<cr>', desc = 'Expand' },
      { '<leader>ghrs', '<cmd>GHSubmitReview<cr>', desc = 'Submit' },
      { '<leader>ghrz', '<cmd>GHCollapseReview<cr>', desc = 'Collapse' },
      { '<leader>ght', group = 'Threads' },
      { '<leader>ghtc', '<cmd>GHCreateThread<cr>', desc = 'Create' },
      { '<leader>ghtn', '<cmd>GHNextThread<cr>', desc = 'Next' },
      { '<leader>ghtt', '<cmd>GHToggleThread<cr>', desc = 'Toggle' },
      { '<leader>t', group = '[T]urbo' },
      { '<leader>tc', '<cmd>LogsitterClearBuf<cr>', desc = '[C]lear File' },
      { '<leader>tl', '<cmd>Logsitter<cr>', desc = '[L]og' },
      { '<leader>o', '<cmd>Oil<cr>', desc = '[O]il' },
    }
  end,
}
